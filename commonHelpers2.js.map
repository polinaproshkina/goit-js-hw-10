{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["'use strict'\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst radioBtn = document.getElementsByName('state');\nconst inputForm = document.querySelector('form');\n\nlet delayValue;\nlet radioBtnValue;\n\n\nconst makePromise = () => {\n    event.preventDefault();\n    const form = event.target;\n    delayValue = Math.round(form.elements.delay.value.trim());\n    console.log(delayValue);\n\n    for (let i = 0; i < radioBtn.length; i++) {\n        if (radioBtn[i].checked) {\n            radioBtnValue = radioBtn[i].value;\n            console.log(radioBtnValue);\n        }\n    }\n    return new Promise((resolve, reject) => {\n        const canFulfill = radioBtnValue = \"Fulfilled\";\n        setTimeout(() => {\n            for (let i = 0; i < radioBtn.length; i++){\n                if (radioBtn[0].checked) {\n                resolve(`Fulfilled promise in ${delayValue}ms`\n)\n            }\n            else if(radioBtn[1].checked) {\n                reject(`❌ Rejected promise in ${delayValue}ms`)\n            }\n            }\n            \n        }, Math.floor(delayValue));\n    });\n\n};\n\n inputForm.addEventListener(\"submit\", event => {\n     makePromise()\n         .then((res) => iziToast.show({\n             title: 'OK',\n             titleColor: 'white',\n             iconUrl: '../img/bi_check2-circle.svg',\n             iconText: 'OK',\n             transitionIn: 'fadeInLeft',\n             transitionOut: 'fadeOutRight',\n            position: 'topRight',\n            messageColor: 'white',\n            backgroundColor: 'rgba(89, 161, 13, 1)',\n             message: `${res}`}))\n         .catch((res) => iziToast.show({\n            transitionIn: 'fadeInLeft',\n            transitionOut: 'fadeOutRight',\n            position: 'topRight',\n            messageColor: 'white',\n            backgroundColor: 'rgba(255, 110, 110, 1)',\n             message: `${res}`}));\n    });\n\n\n\n\n\n\n\n// inputForm.addEventListener('submit',submitForm)\n\n// function submitForm(event) {\n//     const radioBtn = document.getElementsByName('state').map((btn) => {\n//         return new Promise((res, rej) =>\n//             radioBtnValue? res : rej)\n//     });\n// };\n\n// Promise.allSettled(radioBtn).then(btns => {\n//     console.log(btns)\n\n//     values.forEach((btn, i) => {\n//         setTimeout(() => {\n//             radioBtn[i] = btn.value;\n//         }, 2000)\n//     });\n// });\n\n\n\n\n\n\n\n// function submitForm(event) {\n//     new Promise((resolve, reject) => {\n//         event.preventDefault();\n//         const form = event.target;\n//         delayValue = Math.round(form.elements.delay.value.trim());\n//         console.log(delayValue);\n\n//         for (let i = 0; i < radioBtn.length; i++) {\n//             if (radioBtn[i].checked) {\n//                 radioBtnValue = radioBtn[i].value;\n//                 console.log(radioBtnValue);\n//             }\n//         }\n//         setTimeout(() => {\n//             if (radioBtnValue = \"fulfilled\") {\n//                 resolve(`Fulfilled promise in ${delayValue}ms`)\n//             } else {\n//                 reject(`Rejected promise in ${delayValue}ms`)\n//             }\n            \n//         }, delayValue);\n//     });\n\n//     Promise.then((res) => console.log(`${res}`));\n// };\n\n\n    \n// function submitForm(event) {\n//         event.preventDefault();\n//         const form = event.target;\n//         delayValue = Math.round(form.elements.delay.value.trim());\n//         console.log(delayValue);\n\n//         for (let i = 0; i < radioBtn.length; i++) {\n//             if (radioBtn[i].checked) {\n//                 radioBtnValue = radioBtn[i].value;\n//                 console.log(radioBtnValue);\n//             }\n//         }\n//     };\n\n// new Promise((resolve,reject) => {\n// setTimeout(() => {\n//         if (radioBtnValue = \"fulfilled\") {\n//             resolve(`Fulfilled promise in ${delayValue}ms`)\n//         } else {\n//             reject(`Rejected promise in ${delayValue}ms`)\n//         }\n        \n//     }, delayValue);\n// });\n"],"names":["radioBtn","inputForm","delayValue","radioBtnValue","makePromise","form","i","resolve","reject","event","res","iziToast"],"mappings":"oGAIA,MAAMA,EAAW,SAAS,kBAAkB,OAAO,EAC7CC,EAAY,SAAS,cAAc,MAAM,EAE/C,IAAIC,EACAC,EAGJ,MAAMC,EAAc,IAAM,CACtB,MAAM,eAAc,EACpB,MAAMC,EAAO,MAAM,OACnBH,EAAa,KAAK,MAAMG,EAAK,SAAS,MAAM,MAAM,KAAI,CAAE,EACxD,QAAQ,IAAIH,CAAU,EAEtB,QAASI,EAAI,EAAGA,EAAIN,EAAS,OAAQM,IAC7BN,EAASM,CAAC,EAAE,UACZH,EAAgBH,EAASM,CAAC,EAAE,MAC5B,QAAQ,IAAIH,CAAa,GAGjC,OAAO,IAAI,QAAQ,CAACI,EAASC,IAAW,CACjBL,EAAgB,YACnC,WAAW,IAAM,CACb,QAASG,EAAI,EAAGA,EAAIN,EAAS,OAAQM,IAC7BN,EAAS,CAAC,EAAE,QAChBO,EAAQ,wBAAwBL,CAAU,IAC1D,EAEoBF,EAAS,CAAC,EAAE,SAChBQ,EAAO,yBAAyBN,CAAU,IAAI,CAIrD,EAAE,KAAK,MAAMA,CAAU,CAAC,CACjC,CAAK,CAEL,EAECD,EAAU,iBAAiB,SAAUQ,GAAS,CAC1CL,EAAa,EACR,KAAMM,GAAQC,EAAS,KAAK,CACzB,MAAO,KACP,WAAY,QACZ,QAAS,8BACT,SAAU,KACV,aAAc,aACd,cAAe,eAChB,SAAU,WACV,aAAc,QACd,gBAAiB,uBAChB,QAAS,GAAGD,CAAG,EAAE,CAAC,CAAC,EACtB,MAAOA,GAAQC,EAAS,KAAK,CAC3B,aAAc,aACd,cAAe,eACf,SAAU,WACV,aAAc,QACd,gBAAiB,yBAChB,QAAS,GAAGD,CAAG,EAAE,CAAC,CAAC,CAChC,CAAK"}